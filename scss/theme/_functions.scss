@function font($key: "") {
    @return map-get($fonts, $key);
}

@function image-url($file: null) {
    @return if($file !=null, $img_dir + "/" + $file, null);
}

@function decimal-round($val, $precision: 2, $mode: round) {
    $n: 1;
    @if type-of($val) !=number {
        //@warn '#{ $val } is not a number.';
        @return $val;
    }
    @if type-of($precision) !=number {
        //@warn '#{ $precision } is not a number.';
        @return $val;
    } @else if not unitless($precision) {
        //@warn '#{ $precision } has a unit.';
        @return $val;
    }
    @if $precision>0 {
        @for $i from 1 through $precision {
            $n: $n * 10;
        }
    }
    @if $mode==round {
        @return round($val * $n) / $n;
    } @else if $mode==ceil {
        @return ceil($val * $n) / $n;
    } @else if $mode==floor {
        @return floor($val * $n) / $n;
    } @else {
        //@warn '#{ $mode } is undefined keyword.';
        @return $val;
    }
}

@function to-rem($val) {
    @if type-of($val) ==number {
        @return decimal-round($val/$base-font-size, 2) * 1rem;
    }
}

@function to-em($val, $base) {
    @if (type-of($val) ==number && type-of($base) ==number) {
        @return decimal-round($val/$base, 2) * 1em;
    }
}

@mixin retina {
    @media only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
        @content;
    }
}

@mixin bg-img($img-1x, $img-2x: null) {
    background: url(image-url($img-1x)) 50% 50% / contain no-repeat;
    @if $img-2x and $img-2x != "" {
        @include retina {
            background-image: url(image-url($img-2x));
        }
    }
}

@mixin text2img($img-1x, $img-2x: null) {
    @include text-hide;
    @include bg-img($img-1x, $img-2x)
}

@mixin inset($offset: 0) {
    position: absolute;
    top: $offset;
    left: $offset;
    right: $offset;
    bottom: $offset;
}

@mixin position-center($axis: all) {
    position: absolute;
    @if to-lower-case($axis) == "x" {
        left: 50%;
        transform: translate(-50%, 0);
    } @else if to-lower-case($axis) == "y" {
        top: 50%;
        transform: translate(0, -50%);
    } @else {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin media-phone {
    @include media-breakpoint-down(xs) {
        @content;
    }
}
@mixin media-not-phone {
    @include media-breakpoint-up(sm) {
        @content;
    }
}

@mixin media-desktop {
    @include media-breakpoint-up(xl) {
        @content;
    }
}

@mixin media-not-desktop {
    @include media-breakpoint-down(lg) {
        @content;
    }
}
